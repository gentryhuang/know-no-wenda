<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true" scanPeriod="10 seconds" debug="true">
    <jmxConfigurator/>
    <timestamp key="byDay" datePattern="yyyy-MM-dd"/>
    <!-- property用来设置变量 -->
    <property name="PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] %marker %msg%n"/>
    <property name="ALERT_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level marker: %marker。 %message%n%xException%n"/>

    <!-- appender用来格式化日志输出节点，有俩个属性name和class，class用来指定哪种输出策略，常用就是控制台输出策略和文件输出策略。 -->

    <!-- 添加日志存储器，控制台 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 展示格式既可以使用layout 又可以使用encoder,encoder表示对日志进行编码
              <layout class="ch.qos.logback.classic.PatternLayout">
                   <pattern>[SM]%date %level %10logger [%file:%line] %msg%n</pattern>
               </layout>
         -->
        <encoder>
            <pattern>[SM]%date %level %10logger [%file:%line] %msg%n</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>


    <!-- 添加到本地的info日志 -->
    <!-- 文件大小到达指定尺寸的时候产生一个新的文件 -->
    <appender name="KNOW_NO_WENDA" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--
        日志名称，如果没有File 属性，那么只会使用FileNamePattern的文件路径规则
        如果同时有<File>和<FileNamePattern>，那么当天日志是<File>，明天会自动把今天
        的日志改名为今天的日期。即，<File> 的日志都是当天的。
       -->
        <file>${LOG_PATH}/log/know_no_wenda.log</file>
        <!-- 滚动策略，每天一个日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
            <fileNamePattern>${LOG_PATH}/bak/knw.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
            <!-- 只保留最近7天的日志 -->
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <!-- 对于日志文件的配置，使用encoder ,对应控制台可以使用layout也可以使用encoder-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 添加本地的异常处理日志存储 -->
    <appender name="EXCEPTION_HANDLER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/log/exception_handler.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/bak/exception_handler.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 执行日志 -->
    <appender name="ACCESS_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/log/access.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/bak/access.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}] %msg ms%n</pattern>
        </encoder>
    </appender>

    <!-- 方法调用超时时间 -->
    <appender name="TIME_OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_PATH}/log/time_out.log</File>
        <Append>true</Append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/bak/time_out.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>utf-8</charset>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 用户操作追踪日志 -->
    <appender name="OPERATION_SAVE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_PATH}/log/operation.log</File>
        <Append>true</Append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/bak/operation.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>utf-8</charset>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 业务日志-->
    <appender name="BUSINESS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/log/business.log</file>
        <Append>true</Append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/bak/business.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>
    <!-- sql执行日志 -->
    <appender name="SQL_EXECUTE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/log/sql_execute.log</file>
        <Append>true</Append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/bak/sql_execute.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- solr搜索 -->
    <appender name="SOLR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/log/solr.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/bak/solr.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}] %msg ms%n</pattern>
        </encoder>
    </appender>

    <!--
       <loger>用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。<loger>仅有一个name属性，一个可选的level和一个可选的addtivity属性。
        name:用来指定受此loger约束的某一个包或者具体的某一个类。也可以为Marker服务，让Marker来获取对应的logger
        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别。如果未设置此属性，那么当前loger将会继承上级的级别。
        addtivity:是否向上级loger（如：root）传递打印信息。默认是true。
        注意：当没有设置appender时，此loger本身不打印任何信息
     -->
    <!--设置日志打印级别 -->
    <logger name="java.sql.ResultSet" level="ERROR"/>
    <logger name="org.apache.ibatis" level="ERROR"/>
    <logger name="java.sql.PreparedStatement" level="ERROR"/>
    <logger name="java.sql.Connection" level="ERROR"/>
    <logger name="org.mybatis.spring" level="ERROR"/>

    <!-- 业务 -->
    <logger name="BUSINESS" level="INFO" additivity="false">
        <appender-ref ref="BUSINESS"/>
    </logger>

    <!-- 用户操作追踪 -->
    <logger name="OPERATION_SAVE" level="INFO" additivity="false">
        <appender-ref ref="OPERATION_SAVE"/>
    </logger>

    <!-- 方法超时-->
    <logger name="TIME_OUT" level="INFO" additivity="false">
        <appender-ref ref="TIME_OUT"/>
    </logger>

     <!-- sql执行情况 -->
    <logger name="com.know.wenda.dao.mapper" level="DEBUG" additivity="false">
        <appender-ref ref="SQL_EXECUTE"/>
    </logger>
    <!-- 异常处理日志-->
    <logger name="EXCEPTION_HANDLER" level="INFO" additivity="false">
        <appender-ref ref="EXCEPTION_HANDLER"/>
    </logger>
    <!-- solr处理日志-->
    <logger name="SOLR_LOG" level="INFO" additivity="false">
        <appender-ref ref="SOLR_LOG"/>
    </logger>
    <!-- 项目日志 -->
    <logger name="KNOW_NO_WENDA" level="INFO" additivity="false">
        <appender-ref ref="KNOW_NO_WENDA"/>
    </logger>

    <!-- root节点必须选，它用来指定最基础的日志输出级别，只有一个level属性 -->
    <root>
        <level value="error"/>
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="KNOW_NO_WENDA"/>
    </root>
</configuration>